{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehak\\\\Desktop\\\\test2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const [response, setResponse] = useState('');\n  const sendJSON = () => {\n    const url = 'http://mihailmaximov.ru/projects/json/json.php';\n    const data = JSON.stringify({\n      name,\n      email,\n      password\n    });\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: data\n    }).then(response => response.text()).then(data => {\n      setResponse(data);\n    }).catch(error => {\n      console.error('Ошибка:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"firstname\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: e => setMail(e.target.value),\n      placeholder: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendJSON,\n      children: \"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u0438\\u0442\\u044C JSON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"P1KDOK0N7+23WYoUhcYrP65LCg0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","name","setName","email","setMail","password","setPassword","response","setResponse","sendJSON","url","data","JSON","stringify","fetch","method","headers","body","then","text","catch","error","console","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mehak/Desktop/test2/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n  const [name, setName] = useState('');\n  const [email, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const [response, setResponse] = useState('');\n\n  const sendJSON = () => {\n    const url = 'http://mihailmaximov.ru/projects/json/json.php';\n    const data = JSON.stringify({ name, email, password });\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: data\n    })\n      .then(response => response.text())\n      .then(data => {\n        setResponse(data);\n      })\n      .catch(error => {\n        console.error('Ошибка:', error);\n      });\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={name} onChange={e => setName(e.target.value)} placeholder=\"firstname\" />\n      <input type=\"text\" value={email} onChange={e => setMail(e.target.value)} placeholder=\"email\" />\n      <input type=\"text\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"password\" />\n\n      <button onClick={sendJSON}>Проверить JSON</button>\n\n      <div>{response}</div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,KAAK,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,GAAG,GAAG,gDAAgD;IAC5D,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;MAAEZ,IAAI;MAAEE,KAAK;MAAEE;IAAS,CAAC,CAAC;IAEtDS,KAAK,CAACJ,GAAG,EAAE;MACTK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEN;IACR,CAAC,CAAC,CACCO,IAAI,CAACX,QAAQ,IAAIA,QAAQ,CAACY,IAAI,CAAC,CAAC,CAAC,CACjCD,IAAI,CAACP,IAAI,IAAI;MACZH,WAAW,CAACG,IAAI,CAAC;IACnB,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IACjC,CAAC,CAAC;EACN,CAAC;EAED,oBACEvB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAExB,IAAK;MAACyB,QAAQ,EAAEC,CAAC,IAAIzB,OAAO,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClGnC,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEtB,KAAM;MAACuB,QAAQ,EAAEC,CAAC,IAAIvB,OAAO,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/FnC,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEpB,QAAS;MAACqB,QAAQ,EAAEC,CAAC,IAAIrB,WAAW,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEzGnC,OAAA;MAAQoC,OAAO,EAAEzB,QAAS;MAAAc,QAAA,EAAC;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAElDnC,OAAA;MAAAyB,QAAA,EAAMhB;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV,CAAC;AAACjC,EAAA,CArCID,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAuCT,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}